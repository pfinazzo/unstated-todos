{"version":3,"sources":["components/CreateTodoForm.jsx","utilities/todoService.js","containers/HomeStateContainer.jsx","components/Todo.jsx","components/TodosWrapper.jsx","pages/Home.jsx","components/Nav.jsx","App.js","serviceWorker.js","index.js"],"names":["CreateTodoForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","todoFormStyle","border","height","width","margin","textAlign","borderRadius","handleChange","key","e","setState","defineProperty","target","value","onButtonClick","_this$props$container","props","container","addTodo","idAdd","then","containerState","id","state","content","textAreaStyle","midWidth","padding","resize","buttonDivStyle","marginTop","_this2","react_default","a","createElement","style","onChange","type","lib","onClick","Component","saveTodos","todos","localStorage","setItem","JSON","stringify","toConsumableArray","Set","getTodos","parse","getItem","HomeContainer","todo","found","i","length","prevState","concat","pullTodos","containerStateTodos","console","log","undefined","Promise","resolve","reject","deleteTodo","filter","Container","Todo","buttonClick","todoWrapStyle","display","justifyContent","marginBottom","btnWrapStyle","position","contentWrapStyle","flexFlow","paragraphStyle","wordWrap","waves","TodosContainer","stateContainerTodos","_this3","refs","collection","scrollTop","scrollHeight","_this4","ref","className","map","Todo_Todo","Home","wrapStyle","unstated_es","to","HomeStateContainer","CreateTodoForm_CreateTodoForm","TodosWrapper_TodosContainer","Nav","brand","App","components_Nav","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fac080d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-materialize';\nimport './../css/text-area.css';\n\nexport default class CreateTodoForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      content: \"\",\n      id: null\n    }\n  }\n\n  todoFormStyle = {\n    border: \"solid black 1px\",\n    height: \"500px\",\n    width: \"500px\",\n    margin: \"80px 30px 0px 30px\",\n    textAlign: \"center\",\n    borderRadius: \"25px\"\n  }\n\n\n  componentDidMount() {\n    const { id } = this.props;\n    this.setState({ id });\n  }\n\n  handleChange = (key, e) => {\n    this.setState({\n      [key]: e.target.value\n    })\n  }\n  \n  onButtonClick = () => {\n    const { addTodo, idAdd } = this.props.container;\n    idAdd().then((containerState) => {\n      const { id } = containerState;\n      this.setState({ id }, () => {\n        addTodo(this.state);\n        this.setState({\n          content: \"\"\n        })\n      });\n    });\n  }\n\n  textAreaStyle = {\n    height: \"400px\",\n    midWidth: \"100%\",\n    borderRadius: \"25px\",\n    padding: \"20px\",\n    border: \"solid grey 1px\",\n    resize: \"none\"\n  }\n\n  buttonDivStyle={\n    marginTop: \"20px\"\n  }\n\n  render() {\n    return (\n      <div style={this.todoFormStyle}>\n        <textarea style={this.textAreaStyle} onChange={e => this.handleChange(\"content\", e)} value={this.state.content} type=\"text\" />\n        <div style={this.buttonDivStyle}>\n          <Button onClick={this.onButtonClick}>Add</Button>\n        </div>\n      </div>\n    )\n  }\n}\n","\nexport const saveTodos = (todos) => {\n  localStorage.setItem(\"todos\", JSON.stringify([...new Set([...todos])]));\n}\n\nexport const getTodos = () => {\n  return JSON.parse(localStorage.getItem(\"todos\")) || [];\n}\n","import { Container } from 'unstated';\nimport { getTodos, saveTodos } from './../utilities/todoService';\n\nexport default class HomeContainer extends Container {\n  state = {\n    todos: []\n  }\n\n\n  addTodo = (todo) => {\n    let found = false;\n    for (let i = 0; i < this.state.todos.length; i++) {\n      if (this.state.todos[i].content === todo.content) {\n        return found = true;\n      }\n    }\n    if (!found) {\n      this.setState((prevState) => {\n        return { todos: [...prevState.todos, todo] }\n      }, () => {\n        saveTodos(this.state.todos, () => {\n          this.pullTodos().then(containerStateTodos => {\n            console.log('pulled from local storage', containerStateTodos);\n          })\n        });\n      })\n    }\n  }\n\n  idAdd = () => {\n    if (this.state.id !== null || this.state.id !== undefined) {\n      return new Promise((resolve, reject) => {\n        this.setState(prevState => {\n          return { id: prevState.id + 1 }\n        }, () => {\n          resolve(this.state);\n        })\n      })\n    } else {\n      this.setState({\n        id: 0\n      })\n    }\n\n  }\n\n  pullTodos = () => {\n    return new Promise((resolve, reject) => {\n      var todos = getTodos();\n      this.setState({ todos }, () => {\n        if (this.state.todos.length) {\n          if (!this.state.todos[this.state.todos.length - 1].id) {\n            this.setState({\n              id: 0\n            })\n          } else {\n            this.setState({\n              id: this.state.todos[this.state.todos.length - 1].id\n            }, () => {\n              resolve(this.state);\n            })\n          }\n        } else {\n          this.setState({\n            id: 0\n          }, () => {\n            resolve(this.state);\n          })\n        }\n      });\n    })\n  }\n\n  deleteTodo = (content) => {\n    var todos = this.state.todos.filter(todo => {\n      return todo.content !== content;\n    })\n    this.setState({ todos })\n  }\n\n}","import React, { Component } from 'react';\nimport { CollectionItem, Button } from 'react-materialize';\nimport './../css/btn.css';\n\nexport default class Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      id: null\n    }\n  }\n\n  componentWillMount() {\n    const { todo } = this.props;\n    const { content } = todo;\n    this.setState({ content }, () => {\n      this.setState({\n        id: this.props.container.state.id\n      })\n    });\n  }\n\n  buttonClick = () => {\n    this.props.container.deleteTodo(this.state.content)\n  }\n\n  todoWrapStyle = {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\"\n  }\n\n  btnWrapStyle = {\n    position: \"relative\",\n    display: \"inline-block\",\n    width: \"150px\",\n    marginTop: \"8px\"\n  }\n  contentWrapStyle = {\n    display: \"flex\",\n    flexFlow: \"row wrap\",\n    width: \"100px\",\n  }\n  paragraphStyle = {\n    width: \"100%\",\n    wordWrap: \"break-word \"\n  }\n\n  render() {\n    return (\n      <CollectionItem>\n        <div style={this.todoWrapStyle}>\n          <div style={this.contentWrapStyle}>\n            <p style={this.paragraphStyle}>{this.state.content}</p>\n          </div>\n          <div style={this.btnWrapStyle}>\n            <Button waves=\"red\" onClick={this.buttonClick}>Remove</Button>\n          </div>\n        </div>\n      </CollectionItem>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Todo from './Todo';\nimport { Collection } from 'react-materialize';\nimport './../css/collection.css';\nimport { saveTodos } from '../utilities/todoService';\n\nexport default class TodosContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: []\n    }\n  }\n\n  componentWillMount() {\n    const { pullTodos } = this.props.container;\n    pullTodos().then((stateContainerTodos) => {\n      const { todos } = stateContainerTodos;\n      this.setState({ todos });\n    });\n  }\n\n  componentDidUpdate() {\n    const { todos } = this.props.container.state;\n    if (this.state.todos.length !== todos.length) {\n      this.setState({ todos }, () => {\n        saveTodos(this.state.todos);\n      })\n    }\n    this.refs.collection.scrollTop = this.refs.collection.scrollHeight;\n  }\n\n  render() {\n    return (\n      <Collection>\n        <div ref=\"collection\" className=\"collection-wrap\">\n          {this.state.todos.map(todo => {\n            return <Todo container={this.props.container} key={todo.id} todo={todo} />\n          })}\n        </div>\n      </Collection>\n    )\n  }\n}","import React, { Component } from 'react';\nimport CreateTodoForm from '../components/CreateTodoForm';\nimport HomeStateContainer from './../containers/HomeStateContainer';\nimport { Subscribe } from 'unstated';\nimport TodosWrapper from '../components/TodosWrapper';\n\n\nexport default class Home extends Component {\n\n  wrapStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n  }\n\n\n  render() {\n    return (\n      <Subscribe to={[HomeStateContainer]}>\n        {container => (\n          <div style={this.wrapStyle}>\n            <CreateTodoForm container={container} />\n            <TodosWrapper container={container} />\n          </div>\n        )}\n      </Subscribe>\n    )\n  }\n}","import React from 'react';\nimport { Navbar} from 'react-materialize';\nimport './../css/nav.css';\n\nconst Nav = () => {\n    return(\n      <Navbar brand=\"Unstated Todos\"/>\n    )\n}\n\nexport default Nav;\n\n\n","//react\nimport React, { Component } from 'react';\n\nimport Home from './pages/Home';\n// components\nimport Nav from './components/Nav';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n  import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'unstated';\n\nReactDOM.render(<Provider ><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}